I"<p>How to construct CMakeLists.txt to use ceres sovler<br /></p>

<h2 id="cmakeliststxt-파일-구성하기">CMakeLists.txt 파일 구성하기</h2>

<p>Ceres solver를 설치하고 아래와 같이 빌드 코딩 후 빌드해보자 <br /></p>

<h3 id="1-code-skeleton">1. Code Skeleton</h3>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;ceres/ceres.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;glog/logging.h&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="n">ceres</span><span class="o">::</span><span class="n">Problem</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span><span class="o">**</span> <span class="n">argv</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// The variable to solve for with its initial value. It will be</span>
  <span class="c1">// mutated in place by the solver.</span>
  <span class="kt">double</span>       <span class="n">x</span>         <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
  <span class="k">const</span> <span class="kt">double</span> <span class="n">initial_x</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>

  <span class="c1">// Build the problem.</span>
  <span class="n">Problem</span> <span class="n">problem</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

<p>문제가 없이 빌드 되었다면 이 게시물을 건너뛰자! <br />
나는 빌드조차 되지 않아서 꽤나 고생을 했다 <br /></p>

<h3 id="2-cmakeliststxt">2. CMakeLists.txt</h3>
<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># cmake 최소 버전을 적어준다</span>
<span class="nb">cmake_minimum_required</span><span class="p">(</span>VERSION 2.8.3<span class="p">)</span>

<span class="c1"># project 이름을 적어준다 [띄어쓰기 금지]</span>
<span class="nb">project</span><span class="p">(</span>my_proj<span class="p">)</span>

<span class="c1"># C++ 11로 컴파일하겠다는 뜻이다!</span>
<span class="c1"># ceres를 빌드하는 과정에서 에러가 나서 해결했던 방법이다</span>
<span class="nb">set</span><span class="p">(</span>CMAKE_CXX_STANDARD 11<span class="p">)</span>

<span class="c1"># 아래 명령을 순서대로 입력해준다</span>
<span class="nb">find_package</span><span class="p">(</span>Ceres REQUIRED<span class="p">)</span>

<span class="nb">include_directories</span><span class="p">(</span><span class="si">${</span><span class="nv">CERES_INCLUDE_DIRS</span><span class="si">}</span><span class="p">)</span>

<span class="nb">add_executable</span><span class="p">(</span>main src/main.cpp<span class="p">)</span>
<span class="nb">target_link_libraries</span><span class="p">(</span>main <span class="si">${</span><span class="nv">CERES_LIBRARIES</span><span class="si">}</span><span class="p">)</span>

</code></pre></div></div>

<p>위와 같이 선언하면 문제없이 빌드될 것이다 ! <br /></p>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://groups.google.com/g/ceres-solver/c/wt8lf1aXrfg">undefined reference to `ceres::Problem::Problem()’</a></li>
</ul>
:ET