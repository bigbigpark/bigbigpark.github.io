I"û<p>Basic code for the LiDAR test <br /></p>

<h2 id="code">Code</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#! /usr/bin/env python
</span>
<span class="kn">import</span> <span class="nn">rospy</span>
<span class="kn">from</span> <span class="nn">sensor_msgs.msg</span> <span class="kn">import</span> <span class="n">PointCloud2</span>
<span class="kn">from</span> <span class="nn">tf.transformations</span> <span class="kn">import</span> <span class="n">euler_from_quaternion</span><span class="p">,</span> <span class="n">quaternion_from_euler</span>
<span class="kn">import</span> <span class="nn">math</span>

<span class="k">def</span> <span class="nf">callback</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="s">'---</span><span class="se">\n</span><span class="s">[Header]'</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' sequence   : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">header</span><span class="p">.</span><span class="n">seq</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' stamp      : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">header</span><span class="p">.</span><span class="n">stamp</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' width      : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">width</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' height     : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">height</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' point_step : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">point_step</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' row_step   : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">row_step</span><span class="p">))</span>
  <span class="k">print</span><span class="p">(</span><span class="s">' Actual size: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">row_step</span><span class="o">*</span><span class="n">msg</span><span class="p">.</span><span class="n">height</span><span class="p">))</span>
  
  <span class="k">print</span><span class="p">(</span><span class="s">' num fields : {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">fields</span><span class="p">)))</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">fields</span><span class="p">)):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'  - {} / {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">msg</span><span class="p">.</span><span class="n">fields</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">name</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">fields</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">offset</span><span class="p">))</span>
  <span class="k">if</span> <span class="n">msg</span><span class="p">.</span><span class="n">is_dense</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Dense'</span><span class="p">)</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'Not dense'</span><span class="p">)</span>



<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
  <span class="n">rospy</span><span class="p">.</span><span class="n">init_node</span><span class="p">(</span><span class="s">'lidar_node'</span><span class="p">,</span> <span class="n">anonymous</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    
  <span class="n">rospy</span><span class="p">.</span><span class="n">Subscriber</span><span class="p">(</span><span class="s">'/os_cloud_node/points'</span><span class="p">,</span> <span class="n">PointCloud2</span><span class="p">,</span> <span class="n">callback</span><span class="p">)</span>

  <span class="n">rospy</span><span class="p">.</span><span class="n">spin</span><span class="p">()</span>
</code></pre></div></div>
:ET