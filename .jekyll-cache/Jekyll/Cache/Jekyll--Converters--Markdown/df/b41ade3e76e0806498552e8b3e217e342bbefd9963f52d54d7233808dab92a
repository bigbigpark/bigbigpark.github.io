I"Z<p>기회는 준비된 자에게 온다 !</p>

<h2 id="시간-복잡도의-정의">시간 복잡도의 정의</h2>

<p>시간 복잡도(Time Complexity)란 알고리즘이 문제를 해결하기 위한 <strong>연산</strong>의 횟수다.</p>

<p>알고리즘을 평가할 때 2가지의 척도가 사용된다.</p>

<ul>
  <li><strong>Time Complexity</strong>: 수행 연산에 대항하는 <strong>시간 복잡도</strong></li>
  <li><strong>Space Complexity</strong>: 메모리 사용량에 해당하는 <strong>공간 복잡도</strong></li>
</ul>

<p>복잡도니까 낮을 수록 효율적인 알고리즘이겠지? 라는 생각을 해본다.</p>

<p>이를 정량적으로 표현하기 위해 빅오 표기법을 사용한다.</p>

<h2 id="빅오-표기법이란">빅오 표기법이란</h2>

<p>말 그대로 빅오(Big-O)로 표현한다.</p>

<h2 id="reference">Reference</h2>

<ul>
  <li><a href="https://leejinseop.tistory.com/4">[자료구조] 연결 리스트(Linked List) 개념과 구현</a></li>
  <li><a href="https://lamarr.dev/datastructure/2020/04/02/01-linked-list.html">연결 리스트(Linked list) 개념정리</a></li>
  <li>
    <p><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=tjsrudv&amp;logNo=221055137174">[자료구조] 배열 리스트와 연결 리스트의 차이 (장단점)</a></p>
  </li>
  <li><a href="https://velog.io/@kon6443/Data-Structure-C-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-Linked-list">[Data Structure] C++ / 자료구조 / Linked list</a></li>
  <li><a href="https://sanghyu.tistory.com/84">[C++ STL] list(연결리스트)</a></li>
</ul>
:ET