I"=<p>C++에서 std::vector 자료형을 cv::Mat 자료형으로 변환해보자! <br /></p>

<h2 id="개요">개요</h2>

<p>코딩을 하다 보면 1차원 배열 혹은 2차원 배열에서 <strong>cv::Mat</strong>으로 변환해야하는 일이 생긴다. <br /></p>

<p>그래서 다음과 같은 순서로 변환을 진행해본다. <br /></p>

<ol>
  <li>2차원 vector를 1차원 vector 으로 변환 (flatten)</li>
  <li>1차원 vector를 cv::Mat 으로 변환</li>
</ol>

<h2 id="1-2차원-vector를-1차원-vector으로">1) 2차원 vector를 1차원 vector으로</h2>

<p>이 부분은 <a href="https://bigbigpark.github.io/cpp_useful/vector_flatten/">이전 포스팅</a>에서 한번 다룬 적이 있지만 다시 적는다. <br /></p>

<p>flatten이라는 <code class="language-plaintext highlighter-rouge">납작하게 하다</code>라는 뜻을 가진 함수를 하나 만들어 준다. <br />
이 함수의 기능은 이름에서 알다시피 2차원을 1차원으로 만들어주는 녀석일 것이다. <br /></p>

<h3 id="sample-code">Sample Code</h3>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">u_int8_t</span><span class="o">&gt;</span> <span class="n">flatten</span><span class="p">(</span><span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">u_int8_t</span><span class="o">&gt;&gt;&amp;</span> <span class="n">array</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">u_int8_t</span><span class="o">&gt;</span> <span class="n">flattened_array</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="k">auto</span><span class="o">&amp;</span> <span class="n">element</span><span class="o">:</span> <span class="n">array</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">flattened_array</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">flattened_array</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">element</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">element</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">flattened_array</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 사용하는 곳에서</span>
<span class="k">auto</span> <span class="n">array_1d</span> <span class="o">=</span> <span class="n">flatten</span><span class="p">(</span><span class="n">array_2d</span><span class="p">);</span>
</code></pre></div></div>

<p>여기서 STL인 std::vector에 관해 자세하게 다루진 않겠다. <br />
코드를 보고 이해하면 완벽하지만 이해가 잘 되지 않으면, 2차원을 1차원으로 바꿔주는 정도로 해석할 수 있다. <br />
참고로 이 코드는 <code class="language-plaintext highlighter-rouge">row-major</code> 방식으로 동작한다.<br />
<code class="language-plaintext highlighter-rouge">row-major</code> 방식이란 <code class="language-plaintext highlighter-rouge">행 우선</code>이라는 뜻으로 2차원 배열에서 행 단위로 잘라서 1차원 배열에 넣는 것이라 생각하면 된다.</p>

<p><br /></p>

<p>따라서 위와 같은 <strong>flatten</strong>이라는 함수를 하나 선언해주고 사용하는 고셍서 2차원 vector를 입력으로 넣으면 1차원 배열을 얻을 수 있다. <br /></p>

<h2 id="2-1차원-vector를-cvmat-으로-변환">2) 1차원 vector를 cv::Mat 으로 변환</h2>

<p>이거는 엄청 쉽다.. 이게.. <strong>OpenCV</strong> ?? <br />
우선 array_2d가 <strong>nxn</strong>처럼 가로와 세로가 같다고 가정할 때, 그 크기를 기입해줘야 한다.</p>

<h3 id="변환-코드-및-cvimshow-출력하기">변환 코드 및 cv::imshow() 출력하기</h3>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 위에서 받은 array_1d를 이용하여</span>

<span class="n">cv</span><span class="o">::</span><span class="n">Mat</span> <span class="nf">mat</span><span class="p">(</span><span class="n">array_2d</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">array_2d</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">CV_8U</span><span class="p">,</span> <span class="n">array_1d</span><span class="p">.</span><span class="n">data</span><span class="p">());</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">title_name</span> <span class="o">=</span> <span class="s">"std::vector to cv::Mat"</span><span class="p">;</span>
<span class="n">cv</span><span class="o">::</span><span class="n">namedWindow</span><span class="p">(</span><span class="n">title_name</span><span class="p">,</span> <span class="n">cv</span><span class="o">::</span><span class="n">WINDOW_AUTOSIZE</span><span class="p">);</span>
<span class="n">cv</span><span class="o">::</span><span class="n">imshow</span><span class="p">(</span><span class="n">title_name</span><span class="p">,</span> <span class="n">mat</span><span class="p">);</span>
<span class="n">cv</span><span class="o">::</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
</code></pre></div></div>
:ET